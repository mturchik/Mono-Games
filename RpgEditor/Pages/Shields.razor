@page "/Shields"
@using System.ComponentModel.DataAnnotations
@using RpgLibrary
@using RpgLibrary.CharacterClasses
@using RpgLibrary.ItemClasses

<h3>Shields</h3>

<div class="container-fluid">
    @if (ShieldForm != null)
    {

        <EditForm Model="ShieldForm" OnValidSubmit="SubmitForm">
            <DataAnnotationsValidator />

            <div class="row">
                <div class="col-6">
                    <div class="row mb-2">
                        <div class="col-3 text-end">
                            <div class="form-label">Name:</div>
                        </div>
                        <div class="col-3">
                            <InputText class="form-control" @bind-Value="ShieldForm.Name"></InputText>
                        </div>
                        <div class="col-3 text-end">
                            <div class="form-label">Type:</div>
                        </div>
                        <div class="col-3">
                            <InputText class="form-control" @bind-Value="ShieldForm.Type"></InputText>
                        </div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-3 text-end">
                            <div class="form-label">Price:</div>
                        </div>
                        <div class="col-3">
                            <InputNumber class="form-control" @bind-Value="ShieldForm.Price"></InputNumber>
                        </div>
                        <div class="col-3 text-end">
                            <div class="form-label">Weight:</div>
                        </div>
                        <div class="col-3">
                            <InputNumber class="form-control" @bind-Value="ShieldForm.Weight"></InputNumber>
                        </div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-3 text-end">
                            <div class="form-label">Defense Value:</div>
                        </div>
                        <div class="col-3">
                            <InputNumber class="form-control" @bind-Value="ShieldForm.DefenseValue"></InputNumber>
                        </div>
                        <div class="col-3 text-end">
                            <div class="form-label">Defense Modifier:</div>
                        </div>
                        <div class="col-3">
                            <InputNumber class="form-control" @bind-Value="ShieldForm.DefenseModifier"></InputNumber>
                        </div>
                    </div>

                </div>

                <div class="col-6">

                    <div class="row mb-2">
                        <div class="col-3">
                            <div class="form-label text-end">Allowable Classes:</div>
                        </div>
                        <div class="col-3">
                            <InputSelect class="form-control" @bind-Value="ShieldForm.AllowableClasses">
                                @foreach (var className in ClassNameList)
                                {
                                    <option value="@className">@className</option>
                                }
                            </InputSelect>
                        </div>
                    </div>

                </div>

            </div>

            <button class="btn btn-primary me-2" type="submit">Create</button>
            <button class="btn btn-outline-secondary" type="button" @onclick="() => ShieldForm = null">Cancel</button>

            <ValidationSummary />

        </EditForm>

        <hr />
    }
    <div class="row mt-3">
        <div class="col-sm-12 mb-3">
            @if (ShieldForm == null)
            {
                <button class="btn btn-primary" @onclick="() => ShieldForm = new()">Create New</button>
            }
        </div>
        <div class="col-sm-12">
            <table class="table table-bordered table-primary table-responsive table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Price</th>
                        <th>Weight</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var shield in ShieldList)
                    {
                        <tr>
                            <td>@shield.Name</td>
                            <td>@shield.Type</td>
                            <td>@shield.Price</td>
                            <td>@shield.Weight</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    Form? ShieldForm { get; set; }
    List<Shield> ShieldList = new();
    List<string> ClassNameList = new() { "Warrior", "Rogue", "Priest", "Wizard" };

    void SubmitForm()
    {
        if (ShieldForm is null) return;

        var shield = new Shield(
            ShieldForm.Name,
            ShieldForm.Type,
            ShieldForm.Price,
            ShieldForm.Weight,
            ShieldForm.DefenseValue,
            ShieldForm.DefenseModifier,
            ShieldForm.AllowableClasses
        );
        ShieldList.Add(shield);
        ShieldForm = null;
    }

    class Form
    {
        [Required, StringLength(100, MinimumLength = 3)]
        public string Name { get; set; } = "";
        [Required, StringLength(100, MinimumLength = 3)]
        public string Type { get; set; } = "";
        [Required]
        public int Price { get; set; }
        [Required]
        public float Weight { get; set; }
        [Required]
        public int DefenseValue { get; set; }
        [Required]
        public int DefenseModifier { get; set; }
        [Required]
        public string[] AllowableClasses { get; set; } = new string[] { };
    }
}