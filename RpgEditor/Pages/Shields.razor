@page "/Shields"
@inject GameDataManager GameDataManager

<h3>Shields</h3>

@if (Edit != null)
{
    <EditForm Model="Edit" OnValidSubmit="SubmitForm">
        <DataAnnotationsValidator />
        <div class="container-fluid">

            <div class="row">
                <div class="col-6">
                    <div class="row mb-3">
                        <div class="col-3">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Name</RadzenText>
                            <RadzenTextBox @bind-Value="Edit.Name" class="w-100" />
                        </div>
                        <div class="col-3">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Type</RadzenText>
                            <RadzenTextBox @bind-Value="Edit.Type" class="w-100" />
                        </div>
                        <div class="col-3">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Price</RadzenText>
                            <RadzenNumeric TValue="int" Min="0" Max="2000" @bind-Value="Edit.Price" />
                        </div>
                        <div class="col-3">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Weight</RadzenText>
                            <RadzenNumeric TValue="float" Min="0" Max="2000" Step="0.1" @bind-Value="Edit.Weight" />
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-3">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Defense Value</RadzenText>
                            <RadzenNumeric TValue="int" Min="0" Max="2000" @bind-Value="Edit.DefenseValue" />
                        </div>
                        <div class="col-3">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Defense Modifier</RadzenText>
                            <RadzenNumeric TValue="int" Min="0" Max="2000" @bind-Value="Edit.DefenseModifier" />
                        </div>
                    </div>

                </div>

                <div class="col-6">
                    <div class="row mb-2">
                        <div class="col-12">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Allowable Classes</RadzenText>
                            <RadzenSelectBar TValue="IEnumerable<string>" @bind-Value="AllowedClasses" Change="OnClassesChanged"
                                         Multiple="true" Data="@Classes" TextProperty="Name" ValueProperty="Name" />
                        </div>
                    </div>
                </div>
            </div>

            <RadzenButton ButtonStyle="ButtonStyle.Success" Text="Save" ButtonType="ButtonType.Submit"></RadzenButton>
            <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Click="() => Edit = null"></RadzenButton>

            <ValidationSummary />
        </div>
        <hr class="my-3" />
    </EditForm>
}
<RadzenDataGrid Data="@Data" TItem="ShieldData" AllowAlternatingRows="false" AllowSorting="true"
				PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
	<Columns>
		<RadzenDataGridColumn TItem="ShieldData" Frozen="true" Width="155px" Sortable="false">
			<HeaderTemplate>
				@if (Edit == null)
				{
					<RadzenButton ButtonStyle="ButtonStyle.Primary" Text="Create" Click="() => StartEdit(new())"></RadzenButton>
				}
			</HeaderTemplate>
			<Template>
				<RadzenButton ButtonStyle="ButtonStyle.Secondary" Text="Edit" Click="() => StartEdit(context.Clone())"></RadzenButton>
				<RadzenButton ButtonStyle="ButtonStyle.Danger" Text="Delete" Click="() =>  Delete(context)"></RadzenButton>
			</Template>
		</RadzenDataGridColumn>
		<RadzenDataGridColumn TItem="ShieldData" Property="Name" Title="Name" Width="250px" Frozen="true" />
		<RadzenDataGridColumn TItem="ShieldData" Property="Type" Title="Type" Width="100px" />
		<RadzenDataGridColumn TItem="ShieldData" Property="Price" Title="Price" FormatString="{0:d}" Width="100px" />
		<RadzenDataGridColumn TItem="ShieldData" Property="Weight" Title="Weight" FormatString="{0:f}" Width="100px" />
		<RadzenDataGridColumn TItem="ShieldData" Property="DefenseValue" Title="DEF" FormatString="{0:d}" Width="100px" />
		<RadzenDataGridColumn TItem="ShieldData" Property="DefenseModifier" Title="DEF Mod" FormatString="{0:d}" Width="100px" />
		<RadzenDataGridColumn TItem="ShieldData" Property="AllowableClasses" Title="Allowable Classes" Sortable="false">
			<Template>
				@string.Join(", ", context.AllowableClasses)
			</Template>
		</RadzenDataGridColumn>
	</Columns>
</RadzenDataGrid>

@code {
	ShieldData? Edit;
	IQueryable<ShieldData> Data = default!;
	IQueryable<ClassData> Classes = default!;
	IEnumerable<string> AllowedClasses = new List<string>();

	protected override void OnInitialized()
	{
		Data = GameDataManager.Shields.Queryable();
		Classes = GameDataManager.Classes.Queryable();
	}

	void StartEdit(ShieldData? data)
	{
		AllowedClasses = data?.AllowableClasses ?? Array.Empty<string>();
		Edit = data;
	}

	void OnClassesChanged()
	{
		if (Edit != null) Edit.AllowableClasses = AllowedClasses.ToArray();
	}

	void Delete(ShieldData data)
	{
		GameDataManager.Shields.Delete(data);
		Data = GameDataManager.Shields.Queryable();
		Edit = null;
	}

	void SubmitForm()
	{
		if (Edit is null) return;
		GameDataManager.Shields.Upsert(Edit);
		Data = GameDataManager.Shields.Queryable();
		Edit = null;
	}
}