@page "/Weapons"
@inject GameDataManager GameDataManager

<h3>Weapons</h3>

<div class="container-fluid">
    @if (Edit != null)
    {
        <EditForm Model="Edit" OnValidSubmit="SubmitForm">
            <DataAnnotationsValidator />

            <div class="row">
                <div class="col-6">
                    <div class="row mb-2">
                        <div class="col-3 text-end">
                            <div class="form-label">Name:</div>
                        </div>
                        <div class="col-3">
                            <InputText class="form-control" @bind-Value="Edit.Name"></InputText>
                        </div>
                        <div class="col-3 text-end">
                            <div class="form-label">Type:</div>
                        </div>
                        <div class="col-3">
                            <InputText class="form-control" @bind-Value="Edit.Type"></InputText>
                        </div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-3 text-end">
                            <div class="form-label">Price:</div>
                        </div>
                        <div class="col-3">
                            <InputNumber class="form-control" @bind-Value="Edit.Price"></InputNumber>
                        </div>
                        <div class="col-3 text-end">
                            <div class="form-label">Weight:</div>
                        </div>
                        <div class="col-3">
                            <InputNumber class="form-control" @bind-Value="Edit.Weight"></InputNumber>
                        </div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-3 text-end">
                            <div class="form-label">Attack Value:</div>
                        </div>
                        <div class="col-3">
                            <InputNumber class="form-control" @bind-Value="Edit.AttackValue"></InputNumber>
                        </div>
                        <div class="col-3 text-end">
                            <div class="form-label">Attack Modifier:</div>
                        </div>
                        <div class="col-3">
                            <InputNumber class="form-control" @bind-Value="Edit.AttackModifier"></InputNumber>
                        </div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-3 text-end">
                            <div class="form-label">Damage Value:</div>
                        </div>
                        <div class="col-3">
                            <InputNumber class="form-control" @bind-Value="Edit.DamageValue"></InputNumber>
                        </div>
                        <div class="col-3 text-end">
                            <div class="form-label">Damage Modifier:</div>
                        </div>
                        <div class="col-3">
                            <InputNumber class="form-control" @bind-Value="Edit.DamageModifier"></InputNumber>
                        </div>
                    </div>

                </div>

                <div class="col-6">
                    <div class="row mb-2">
                        <div class="col-3 text-end">
                            <div class="form-label">Hands:</div>
                        </div>
                        <div class="col-3">
                            <InputSelect class="form-control" @bind-Value="Edit.WeaponHands">
                                @foreach (var hand in Enum.GetValues<WeaponHands>())
                                {
                                    <option value="@hand">@hand</option>
                                }
                            </InputSelect>
                        </div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-3">
                            <div class="form-label text-end">Allowable Classes:</div>
                        </div>
                        <div class="col-3">
                            <InputSelect class="form-control" @bind-Value="Edit.AllowableClasses">
                                @foreach (var className in ClassNameList)
                                {
                                    <option value="@className">@className</option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                </div>

            </div>

            <button class="btn btn-primary me-2" type="submit">Create</button>
            <button class="btn btn-outline-secondary" type="button" @onclick="() => Edit = null">Cancel</button>

            <ValidationSummary />

        </EditForm>
        <hr />
    }
    <div class="row mt-2">
        <div class="col-sm-12 mb-2">
            @if (Edit == null)
            {
                <button class="btn btn-primary" @onclick="() => Edit = new()">Create New</button>
            }
        </div>
        <div class="col-sm-12">
            <table class="table table-bordered table-primary table-responsive table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Type</th>
                        <th>Price</th>
                        <th>Weight</th>
                        <th>Hands</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var data in Data)
                    {
                        <tr>
                            <td>@data.Name</td>
                            <td>@data.Type</td>
                            <td>@data.Price</td>
                            <td>@data.Weight</td>
                            <td>@data.WeaponHands</td>
                            <td>
                                <button class="btn btn-info" @onclick="() => Edit = data.Clone()">Edit</button>
                                <button class="btn btn-danger ml-2" @onclick="() => Delete(data)">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    WeaponData? Edit { get; set; }
    List<WeaponData> Data = new();
    List<string> ClassNameList = new() { "Warrior", "Rogue", "Priest", "Wizard" };

    protected override void OnInitialized()
    {
        Data = GameDataManager.Weapons.Queryable().ToList();
    }

    void Delete(WeaponData data)
    {
        GameDataManager.Weapons.Delete(data);
        Data = GameDataManager.Weapons.Queryable().ToList();
        Edit = null;
    }

    void SubmitForm()
    {
        if (Edit is null) return;
        GameDataManager.Weapons.Upsert(Edit);
        Data = GameDataManager.Weapons.Queryable().ToList();
        Edit = null;
    }
}